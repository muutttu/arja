# generated 2021-11-19, Mozilla Guideline v5.6, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.6
proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:10m max_size=500m inactive=60m use_temp_path=off;

upstream flask {
    # server unix:///path/to/your/mysite/mysite.sock; # for a Unix file socket
    server flask-app:5000;
}

upstream portainer {
    server portainer:9000;
}

server {
    listen 80;

    server_name ${DOMAIN} ${WWW_DOMAIN} ${CHAT_DOMAIN} conference.${CHAT_DOMAIN} upload.${CHAT_DOMAIN} proxy.${CHAT_DOMAIN} pubsub.${CHAT_DOMAIN};

    index index.html;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

   location / {
        # The $host variable holds the domain name of the request.
       return 301 https://$host$request_uri;
   }
}

server {
    listen 443 default_server ssl http2;

    server_name ${DOMAIN} ${WWW_DOMAIN} ${CHAT_DOMAIN} conference.${CHAT_DOMAIN} upload.${CHAT_DOMAIN} proxy.${CHAT_DOMAIN} pubsub.${CHAT_DOMAIN};

    ssl_certificate /etc/nginx/ssl/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${DOMAIN}/privkey.pem;
    ssl_dhparam /etc/nginx/ssl/live/${DOMAIN}/dhparams.pem;

    location / {
        root /usr/share/nginx/html;
        try_files $uri $uri/ =404;
    }

    location /flask/ {
        proxy_pass http://flask/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /portainer/ {
        proxy_pass http://portainer/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_set_header Host $http_host;
        proxy_cache_bypass $http_upgrade;
        proxy_redirect off;
    }

    location /cache-me/ {
        proxy_pass http://flask/;
        proxy_cache cache;
        proxy_cache_lock on;
        proxy_cache_valid 200 30s;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_background_update on;
        expires 20s;
    }

    location /health-check {
        add_header Content-Type text/plain;
        return 200 "success";
    }
}