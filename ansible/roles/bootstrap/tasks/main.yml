---
# tasks file for bootstrapping the Docker host (tested on Ubuntu 20.04)

# Host system preparation and update process:
# --
- name: Install aptitude using apt
  become: true # Apply shell command as 'root'
  apt:
    state: latest
    update_cache: true
    force_apt_get: true

- name: Update apt repository cache
  become: true # Apply shell command as 'root'
  apt:
    update_cache: true
    cache_valid_time: 3600 # 1 hour

- name: Update all packages to the latest version
  become: true # Apply shell command as 'root'
  apt:
    upgrade: dist
    force_apt_get: true

- name: Check if a reboot is needed on all servers
  become: true # Apply shell command as 'root'
  register: reboot_required_file
  stat:
    path: /var/run/reboot-required
    get_md5: false

- name: Reboot the box if kernel updated
  become: true # Apply shell command as 'root'
  reboot:
    msg: "Reboot initiated by Ansible for kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists

- name: Remove unwanted packages
  become: true # Apply shell command as 'root'
  apt:
    autoremove: yes # removes any packages on the system that are no longer needed
    purge: yes # removes all of the configuration files of uninstalled packages

# Install common prerequisites
# --
- name: Install common utility packages
  become: true # Apply shell command as 'root'
  apt:
    name:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent # AP: check if this is needed or gnupg2
    - software-properties-common
    state: present
    update_cache: true
    autoclean: true

# Installs Python package manager
# --
- name: Install Python3 package manager PIP
  become: yes # Apply shell command as 'root'
  apt:
    name: python3-pip
    state: present

# Remove the potential build-in APT installed version of Docker
# -- APT
- name: Remove potential pre-installed Docker from APT
  become: yes # Apply shell command as 'root'
  apt:
    name: docker
    state: absent

# -- PIP3
- name: Remove potential pre-installed Docker from PIP
  pip:
    name:
     - docker
     - docker-py
     - docker-compose
    state: absent
