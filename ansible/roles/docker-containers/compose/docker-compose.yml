version: "3.9"

services:
  db_app:
    container_name: database-app
    #env_file: ./database/.env
    build:
      context: ./database # path to a directory containing a Dockerfile
      dockerfile: Dockerfile
    networks:
      - backend
    restart: always
    expose:
      - "5432"
    volumes:
      - "database_data:/var/lib/postgresql/data/" # TODO - check

  app:
    container_name: flask-app
    depends_on:
      - db_app
    build:
      context: ./app # path to a directory containing a Dockerfile
      dockerfile: Dockerfile
    networks:
      - frontend
      - backend
    restart: always
    expose:
      - "5000"
    volumes:
      - "app_static_files:/var/www/static"
      - "app_media_files:/var/www/media"
    links: # Links allow you to define extra aliases by which a service is reachable from another service.
      - "db_app:database" # Link to containers in another service, here db_app and database

  nginx:
    container_name: nginx
    depends_on:
      - app
    build:
      context: ./nginx # path to a directory containing a Dockerfile
      dockerfile: Dockerfile
    networks:
      - frontend
    restart: always
    ports:
      - "8080:80"
      #- "443:443" # HTTPS reservation
    volumes:
      - "app_static_files:/var/www/static"
      - "app_media_files:/var/www/media"
      - "nginx_data:/var/www"
      - "certbot_data:/etc/nginx/certs:ro"

  ejabberd:
    container_name: ejabberd
    build:
      context: ./ejabberd # path to a directory containing a Dockerfile
      dockerfile: Dockerfile
    networks:
      - frontend
    restart: always
    volumes:
      - "ejabberd_data:/home/ejabberd/conf" # Directory containing configuration and certificates
      - "ejabberd_data:/home/ejabberd/backup"
      - "ejabberd_data:/home/ejabberd/upload" # Directory containing uploaded files | TODO: backup
      - "ejabberd_data:/home/ejabberd/database" # Directory containing Mnesia database | TODO: backup
      - "ejabberd_data:/home/ejabberd/logs" # Directory containing log files
    ports:
      - "5222:5222"
      - "5280:5280"
    environment:
      - CTL_ON_CREATE=register admin localhost password ;
                      check_password admin localhost password
      - CTL_ON_START=registered_vhosts ;
                     stats registeredusers ;
                     status

  portainer:
    container_name: portainer
    build:
      context: ./portainer # path to a directory containing a Dockerfile
      dockerfile: Dockerfile
    networks:
      - frontend
    restart: always
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock" # Access to host system Docker-socket
      - "portainer_data:/data"

# Persistent data to be configured in volumes from Docker host system /var/lib/docker/volumes
volumes: # Named volumes inside /var/lib/docker/volume local docker host directory.
  app_static_files:
  app_media_files:
  database_data:
  nginx_data:
  certbot_data:
  ejabberd_data:
  portainer_data:

networks:
  frontend: # Reservation for frontend-network
    name: arja_frontend_network
  backend: # Reservation for backend-network
    name: arja_backend_network
